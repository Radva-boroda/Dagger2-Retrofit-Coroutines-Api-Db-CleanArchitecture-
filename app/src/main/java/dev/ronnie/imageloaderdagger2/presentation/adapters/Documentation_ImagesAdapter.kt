package dev.ronnie.imageloaderdagger2.presentation.adapters

  // 1 //
//Переваги використання бібліотеки Paging
//Кешування в пам'яті для ваших сторінкових даних. Це гарантує ефективне
//            використання системних ресурсів вашою програмою під час роботи з вивантаженими даними.
//Вбудована дедуплікація запитів гарантує, що ваша програма ефективно використовує пропускну здатність мережі
//            та системні ресурси.
//Настроювані адаптери Recyclerview, які автоматично запитують дані,
//            коли користувач прокручує завантажені дані до кінця.
//Першокласна підтримка співпрограм Kotlin і Flow, а також LiveData і RxJava.
//Вбудована підтримка обробки помилок, включаючи можливості оновлення та повторних спроб.

  // 2 //
//""INNER"" Щоб вкладений клас міг мати доступ до властивостей та функцій зовнішнього класу,
// необхідно визначити вкладений клас із ключовим словом inner .
// Такий клас називають внутрішнім класом (inner class),
// щоб відрізняти від звичайних вкладених класів.

  // 3 //
//В методе адаптера onBindViewHolder() связываем используемые текстовые метки с данными
//- в одном случае это значения из списка, во втором используется одна и та же строка.
//Параметр position отвечает за позицию в списке (индекс), по которой можно получить нужные данные.

  // 4 //
//let полезен при работе с объектами, которые могут принимать значение null.
//Вместо того, чтобы создавать длинные цепочки выражений if-else,
//можно просто скомбинировать оператор ? («оператор безопасного вызова») с let:
//в результате мы получим лямбду, у которой аргумент it является не nullable-версией исходного объекта.

 // 5 //
//Нам нужно указать идентификатор макета для отдельного элемента списка,
//созданный нами ранее в файле recyclerview_item.xml.
//А также вернуть наш объект класса ViewHolder.
//Допустим, устройство может отобразить на экране 9 элементов списка.
//RecyclerView создаст 11-12 элементов (с запасом).
//Неважно, каким большим будет ваш список, но все данные будут размещаться в тех же 11 элементах,
//автоматически меняя содержимое при прокрутке.

// 6 //
//функія bind ( Звязати ) робим привязку